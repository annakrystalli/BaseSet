% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pull.R
\name{pull.TidySet}
\alias{pull.TidySet}
\alias{pull_set}
\alias{pull_element}
\alias{pull_relation}
\title{Pull from a TidySet}
\usage{
\method{pull}{TidySet}(.data, var = -1)

pull_set(.data, var)

pull_element(.data, var)

pull_relation(.data, var)
}
\arguments{
\item{.data}{The TidySet object}

\item{var}{The literal variable name, a positive integer or a negative
integer column position.}
}
\value{
A TidySet object
}
\description{
Use pull to extract the columns of a TidySet object. You can use activate with filter or
use the specific function. The S3 method filters using all the information
on the TidySet.
}
\examples{
relations <- data.frame(sets = c(rep("a", 5), "b", rep("a2", 5), "b2"),
                        elements = rep(letters[seq_len(6)], 2),
                        fuzzy = runif(12))
a <- tidySet(relations)
a <- mutate_element(a, type = c(rep("Gene", 4), rep("lncRNA", 2)))
pull(a, type)
# Equivalent to pull_relation
b <- activate(a, "relations")
pull_relation(b, elements)
pull_element(b, elements)
# Filter element
pull_element(a, type)
# Filter sets
pull_set(a, sets)
}
\seealso{
dplyr \code{\link[dplyr]{pull}} and \code{\link{activate}}
}
