% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy-set.R, R/import.R
\name{tidySet}
\alias{tidySet}
\alias{tidySet.data.frame}
\alias{tidySet.list}
\alias{tidySet.matrix}
\title{Creates a TidySet

Creates a new TidySet object to handle sets.}
\usage{
tidySet(relations, ...)

\method{tidySet}{data.frame}(relations, sets = NULL, elements = NULL)

\method{tidySet}{list}(relations)

\method{tidySet}{matrix}(relations)
}
\arguments{
\item{relations}{(required) Depending on the method, it should be a:
\itemize{
\item{\code{data.frame}}{ with at least one column for the elements
and one for the sets}
\item{\code{list}}{ with the elements that belong to each set}
\item{\code{matrix}}{ with the elements as the rownames and the sets as
the column names}
}}

\item{sets}{A data.frame with at least one column: "sets"}

\item{elements}{A data.frame with at least one column: "elements"}
}
\value{
A TidySet object
}
\description{
Creates a TidySet

Creates a new TidySet object to handle sets.
}
\section{Methods (by class)}{
\itemize{
\item \code{data.frame}: Given the relations in a data.frame

\item \code{list}: Convert to a TidySet from a list

\item \code{matrix}: Convert an incidence matrix into a TidySet
}}

\examples{
relations <- data.frame(sets = c(rep("a", 5), "b"),
                        elements = letters[seq_len(6)])
tidySet(relations = relations)
x <- list("a" = letters[1:5], "b" = LETTERS[3:7])
a <- tidySet(x)
tidySet.matrix(incidence(a))
}
